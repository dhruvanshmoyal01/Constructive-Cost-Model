# -*- coding: utf-8 -*-
"""MRE_calc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jfslx2PrX5eu5FnAFRtxzAaY41ITEaYK
"""

# import libraries
import numpy as np
import pandas as pd
import math
from google.colab import files
import io

uploaded = files.upload()

# reading dataset
cocomo_data = pd.read_csv(io.StringIO(uploaded['cocomo2_dataset.csv'].decode('utf-8')))

# storing the data required
# actual effort for each project
act_eff = np.array(cocomo_data['ACT_EFFORT'])
act_eff = act_eff[:10]
# scale factors
SF = np.array(cocomo_data.iloc[:10, 3:8])
# effort multipliers
EM = np.array(cocomo_data.iloc[:10, 8:25])
# size of projects
size = np.array(cocomo_data['Physical Delivered KLOC'])
size = size[:10]

# Calculating MRE using typical values of A and B
RE = []
for i in range(len(size)):
    E = 0.91 + 0.01*sum(SF[i])
    em_prod = 1
    for num in EM[i]:
      em_prod*=num
    PM = 2.94 * math.pow(size[i], E) * em_prod
    RE.append((act_eff[i]-PM)/act_eff[i]) 

MRE = abs(sum(RE)/len(RE))
print('MRE using typical values of A and B: ',MRE)

# Calculating MRE using A = 2.79 and B = 0.89 which came from using iterations as stoping criteria
RE = []
for i in range(len(size)):
    E = 0.89 + 0.01*sum(SF[i])
    em_prod = 1
    for num in EM[i]:
      em_prod*=num
    PM = 2.79 * math.pow(size[i], E) * em_prod
    RE.append((act_eff[i]-PM)/act_eff[i]) 

MRE = abs(sum(RE)/len(RE))
print('MRE using A and B which came from using iterations as stoping criteria: ',MRE)

# Calculating MRE using A and B which came from using best minimal solution as stoping criteria
RE = []
for i in range(len(size)):
    E = 0.89 + 0.01*sum(SF[i])
    em_prod = 1
    for num in EM[i]:
      em_prod*=num
    PM = 2.88 * math.pow(size[i], E) * em_prod
    RE.append((act_eff[i]-PM)/act_eff[i]) 

MRE = abs(sum(RE)/len(RE))
print('MRE using A and B which came from using best minimal solution as stoping criteria: ',MRE)